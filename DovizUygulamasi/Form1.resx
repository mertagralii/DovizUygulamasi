<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DP/Z
</value>
  </data>
</root>